name: release
on:
  workflow_dispatch:
  release:
    types: [published]
env:
  PACKAGE_DIR: helloworld
jobs:
  release:
    runs-on: ubuntu-latest
    name: release
    steps:
      - uses: actions/checkout@v2
      - name: Fetch complete history for all tags and branches
        run: git fetch --prune --unshallow
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2.1.1
        with:
          auto-update-conda: true
          python-version: "3.9"
      - name: Conda stuff
        shell: bash -l {0}
        run: |
          conda info
          conda env list
          conda install conda-build anaconda-client conda-verify -y
          anaconda login --username aMahanna --password '${{ secrets.CONDA_PASSWORD }}'
          conda config --set anaconda_upload yes
          conda build .

  changelog:
    needs: release
    runs-on: ubuntu-latest
    name: Update Changelog
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Create new branch
        run: git checkout -b actions/changelog

      - name: Set branch upstream
        run: git push -u origin actions/changelog
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      - name: Install release packages
        run: pip install wheel gitchangelog pystache

      - name: Set variables
        run: echo "VERSION=$(curl ${GITHUB_API_URL}/repos/${GITHUB_REPOSITORY}/releases/latest | python -c "import sys; import json; print(json.load(sys.stdin)['tag_name'])")" >> $GITHUB_ENV

      - name: Generate newest changelog
        run: gitchangelog ${{env.VERSION}} > CHANGELOG.md

      - name: Make commit for auto-generated changelog
        uses: EndBug/add-and-commit@v7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          add: "CHANGELOG.md"
          branch: actions/changelog
          message: "!gitchangelog"

      - name: Create pull request for the auto generated changelog
        run: |
          echo "PR_URL=$(gh pr create \
            --title "changelog: release ${{env.VERSION}}" \
            --body "beep boop, i am a robot" \
            --label documentation)" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Alert developer of open PR
        run: echo "Hi dev! Please go see $PR_URL"